# -*- coding: utf-8 -*-
"""test_code

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eJuNUVETvJyo-PNOdsS9sdxBaOn2o0gJ
"""

from flask import Flask, request, jsonify, send_file
from werkzeug.security import check_password_hash
from io import BytesIO
import cv2
import numpy as np
import base64
import hashlib
from detect import run

app = Flask(__name__)

# Dictionary to store results
results_dict = {}

def inference(image):
  s=str(run(weights="./Model.onnx", source=image, conf_thres=0.04, exist_ok=True, half=True, save_txt=False))
  return s

def hash_file(file):
  # Hash the file contents
  file_hash = hashlib.md5(file.read()).hexdigest()
  file.seek(0)  # Reset file pointer to beginning
  return file_hash

@app.route('/upload', methods=['POST'])
def up_image():
  if 'image' not in request.files:
    return "No image part", 400

  file = request.files['image']
  file_hash = hash_file(file)

  if file_hash not in results_dict:
    # Image not processed yet, run inference
    image = cv2.imdecode(np.frombuffer(file.read(), np.uint8), cv2.IMREAD_COLOR)
    results_dict[file_hash] = inference(image)

  # Redirect to results page with hash
  return jsonify({'redirect': f'/results?hash={file_hash}'})

@app.route('/results', methods=["GET"])
def get_result_data():
  file_hash = request.args.get('hash')
  if file_hash not in results_dict:
    return "Invalid hash", 400

  # Retrieve processed image
  result = results_dict[file_hash]

  # Return HTML to display the image
  return f'{result}'

if __name__ == '__main__':
    app.run(host='127.0.0.1', port=5000)